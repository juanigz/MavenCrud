package interfaz;

import controlador.Connector;
import logica.Payaso;

import java.awt.Font;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;

import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.table.DefaultTableModel;

public class VentanaForm extends JFrame 
{

    // Datos de conexion.
    // Connector cn = new Connector();
    Connection con;
    DefaultTableModel model;
    Statement st;
    ResultSet rs;
    int id = 0;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel jPanel1;
    private JPanel _panelBD;
    private JPanel jPanel3;

    private JTable TablaDatos;
    private JScrollPane jScrollPane1;

    private JTextField _txtId;
    private JTextField _txtNombre;
    private JTextField _txtCircos;
    private JTextField jTextField2;

    private JLabel _labelId;
    private JLabel _labelNombre;
    private JLabel _labelCircos;
    private JLabel _tituloPrincipal;
    private JLabel jLabel5;

    private JButton _botonAgregar;
    private JButton _botonEliminar;
    private JButton _botonModificar;
    private JButton _botonLimpiar;

    // End of variables declaration//GEN-END:variables

    public VentanaForm() 
    {
        inicializar();
        listar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void inicializar() 
    {
        setBounds(100, 100, 850, 490);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        setTitle("Registro de Payasos.");
        setLocationRelativeTo(null); // Centra la ventana en pantalla
        setResizable(false);

        jPanel1 = new JPanel();
        _panelBD = new JPanel();
        jPanel3 = new JPanel();

        TablaDatos = new JTable();
        jScrollPane1 = new JScrollPane();

        jTextField2 = new JTextField();
        _txtId = new JTextField();
        _txtNombre = new JTextField();
        _txtCircos = new JTextField();
        
        _tituloPrincipal = new JLabel();
        _labelId = new JLabel();
        _labelNombre = new JLabel();
        _labelCircos = new JLabel();
        jLabel5 = new JLabel();

        _botonAgregar = new JButton();
        _botonModificar = new JButton();
        _botonEliminar = new JButton();
        _botonLimpiar = new JButton();

        jTextField2.setText("jTextField2");

        jPanel1.setBorder(BorderFactory.createTitledBorder("Datos"));

        _labelId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _labelId.setText("ID:");

        _labelNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _labelNombre.setText("NOMBRE:");

        _labelCircos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _labelCircos.setText("CIRCOS:");

        _txtId.setEditable(false);
        _txtId.setEnabled(false);

        // jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sinfloo.png"))); // NOI18N

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(_labelCircos, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(_labelNombre, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(_labelId, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                        .addComponent(_txtId, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                        .addComponent(_txtNombre))
                    .addComponent(_txtCircos, GroupLayout.PREFERRED_SIZE, 127, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(_txtId)
                    .addComponent(_labelId))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(_labelNombre)
                    .addComponent(_txtNombre, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(_txtCircos, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(_labelCircos))
                .addGap(95, 95, 95))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        _panelBD.setBorder(BorderFactory.createTitledBorder("Lista"));

        TablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOMBRES", "CIRCOS"
            }
        ));
        TablaDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaDatos);
        if (TablaDatos.getColumnModel().getColumnCount() > 0) {
            TablaDatos.getColumnModel().getColumn(0).setMinWidth(50);
            TablaDatos.getColumnModel().getColumn(0).setPreferredWidth(50);
            TablaDatos.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        GroupLayout jPanel2Layout = new GroupLayout(_panelBD);
        _panelBD.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
        );

        _tituloPrincipal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        _tituloPrincipal.setText("APLICACION - CRUD");

        jPanel3.setBorder(BorderFactory.createTitledBorder("Operaciones"));

        // btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_user.png"))); // NOI18N
        _botonAgregar.setText("Agregar");
        _botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        // btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/revert.png"))); // NOI18N
        _botonModificar.setText("Modificar");
        _botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        // btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button_cancel.png"))); // NOI18N
        _botonEliminar.setText("Eliminar");
        _botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        // btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        _botonLimpiar.setText("Limpiar");
        _botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(_botonAgregar, GroupLayout.PREFERRED_SIZE, 109, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_botonModificar, GroupLayout.PREFERRED_SIZE, 113, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_botonEliminar)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(_botonLimpiar, GroupLayout.PREFERRED_SIZE, 104, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(_botonAgregar)
                    .addComponent(_botonModificar)
                    .addComponent(_botonEliminar)
                    .addComponent(_botonLimpiar))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(_tituloPrincipal, GroupLayout.PREFERRED_SIZE, 196, GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(_panelBD, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(_tituloPrincipal)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, 148, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_panelBD, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        Agregar(); 
        listar();
        limpiarFields();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        Modificar(); 
        listar();
        limpiarFields();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Eliminar();
        listar();
        limpiarFields();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiarFields();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void TablaDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaDatosMouseClicked
        int row = TablaDatos.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "No se Selecciono");
        } else {
            id = Integer.parseInt((String) TablaDatos.getValueAt(row, 0).toString());
            String nombre = (String) TablaDatos.getValueAt(row, 1);
            String circos = (String) TablaDatos.getValueAt(row, 2);
            _txtId.setText("" + id);
            _txtNombre.setText(nombre);
            _txtCircos.setText(circos);

        }
    }//GEN-LAST:event_TablaDatosMouseClicked

    /**
     * @param args the command line arguments
     */
    // public static void main(String args[]) {
    //     /* Set the Nimbus look and feel */
    //     //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    //     /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
    //      * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
    //      */
    //     try {
    //         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
    //             if ("Nimbus".equals(info.getName())) {
    //                 javax.swing.UIManager.setLookAndFeel(info.getClassName());
    //                 break;
    //             }
    //         }
    //     } catch (ClassNotFoundException ex) {
    //         java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //     } catch (InstantiationException ex) {
    //         java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //     } catch (IllegalAccessException ex) {
    //         java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //     } catch (javax.swing.UnsupportedLookAndFeelException ex) {
    //         java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //     }
    //     //</editor-fold>

    //     /* Create and display the form */
    //     java.awt.EventQueue.invokeLater(new Runnable() {
    //         public void run() {
    //             new Principal().setVisible(true);
    //         }
    //     });
    // }

    private void listar() {
        String sql = "select * from payasos";
        try {
            con = Connector.getConnection();
            st = con.createStatement();
            rs = st.executeQuery(sql);

            Object[] payaso = new Object[3];
            // Payaso payaso = new Payaso();
            String[] Titulos={"id","nombre","circos"};      
            model=new DefaultTableModel(null,Titulos);
            model = (DefaultTableModel) TablaDatos.getModel();

            while (rs.next()) {
                payaso[0] = rs.getInt("Id");
                payaso[1] = rs.getString("Nombre");
                payaso[2] = rs.getString("Circos");
                System.out.println(payaso.toString());
                model.addRow(payaso);
            }

            // while (rs.next()) {
            //     // Integer entero = rs.getInt("Id");
            //     // payaso.setId(entero.toString());

            //     payaso.setId(String.valueOf(rs.getInt("Id")));

            //     payaso.setNombre(rs.getString("Nombre"));
            //     payaso.setCircos(rs.getString("Circos"));
            //     System.out.println(payaso.toString());
            //     model.addRow(payaso);
            // }
            
            TablaDatos.setModel(model);

        } 
        catch (Exception e) 
        {
            e.getMessage();
        }

    }

    private void Agregar() {
        String nombre = _txtNombre.getText();
        String circos = _txtCircos.getText();
        try 
        {
            if (nombre.equals("") || circos.equals("")) {
                JOptionPane.showMessageDialog(null, "Debe Ingresar Datos");
                limpiarTabla(model);               
            } 
            else {
                Payaso payaso = new Payaso(nombre, circos);
                String sql = "INSERT INTO payasos (nombre, circos) VALUES ('" + payaso.getNombre() + "', '" + payaso.getCircos() + "')";
                con = Connector.getConnection();
                st = con.createStatement();
                st.executeUpdate(sql);
                exito("Payaso agregado con exito!");
                JOptionPane.showMessageDialog(null, "Payaso Registrado con Exito");
                limpiarTabla(model);
            }
        } 
        catch (Exception e) 
        {
            e.getMessage();
        }
    }

    private void Eliminar() {       
        int fila = TablaDatos.getSelectedRow();
        System.out.println("fuera " + fila);
        try {
            if (fila < 0) 
            {
                System.out.println(fila);
                JOptionPane.showMessageDialog(null,"Payaso no Seleccionado");
            } 
            else 
            {
                String sql = "delete from payasos where Id=" + id;
                con = Connector.getConnection();
                st = con.createStatement();
                st.executeUpdate(sql);
                exito("Payaso eliminado con exito!");
                JOptionPane.showMessageDialog(null, "Payaso Eliminado");
                // limpiarTabla(model);
                // listar();
                // actualizar();
            }
        }
        catch(Exception e)
        {
            e.getMessage();
        }
    }

    private void Modificar() {
        String nombre = _txtNombre.getText();
        String circos = _txtCircos.getText();
        String sql = "update payaso set nombre='" + nombre + "',circos='" + circos + "' where Id=" + id;
        try {
            if (nombre != null || circos != null) {
                con = Connector.getConnection();
                st = con.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Payaso Modificado");
                limpiarTabla(model);
                
            } else {
                JOptionPane.showMessageDialog(null, "Error...!!!");
            }

        } catch (Exception e) 
        {
            e.getMessage();
        }

    }

    private void limpiarFields() {
        _txtId.setText("");
        _txtNombre.setText("");
        _txtCircos.setText("");
        _txtNombre.requestFocus();
    }

    private void limpiarTabla(DefaultTableModel model) {
        for (int i = 0; i <= TablaDatos.getRowCount(); i++) {
            model.removeRow(i);
            i = i - 1;
        }
    }

    private void exito(String mensaje)
    {
        JTextArea textArea = new JTextArea();
        textArea.setBounds(0, 0, 180, 20);
		textArea.setFont(new Font("Tahoma", Font.PLAIN, 15));
        textArea.setEditable(false);
        this.add(textArea);
        textArea.setText(mensaje);
        textArea.setVisible(true);
    }

    // private void actualizar(){
    //     limpiarTabla(model);
    //     listar();
    // }
}
